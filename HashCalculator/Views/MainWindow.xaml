<Window
    x:Class="HashCalculator.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:gif="https://github.com/XamlAnimatedGif/XamlAnimatedGif"
    xmlns:local="clr-namespace:HashCalculator"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Width="{Binding Source={x:Static local:Settings.Current}, Path=MainWndWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
    Height="{Binding Source={x:Static local:Settings.Current}, Path=MainWndHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
    d:DataContext="{d:DesignInstance Type=local:MainWndViewModel}"
    Icon="/Images/icon.ico"
    Left="{Binding Source={x:Static local:Settings.Current}, Path=MainWindowLeft, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
    SnapsToDevicePixels="True"
    Top="{Binding Source={x:Static local:Settings.Current}, Path=MainWindowTop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
    Topmost="{Binding Source={x:Static local:Settings.Current}, Path=MainWndTopmost}"
    UseLayoutRounding="True"
    WindowState="{Binding Source={x:Static local:Settings.Current}, Path=MainWindowState, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
    mc:Ignorable="d">
    <Window.Title>
        <MultiBinding StringFormat="{}{0} by {1} @ {2}">
            <Binding Source="{x:Static local:Info.Title}" />
            <Binding Source="{x:Static local:Info.Author}" />
            <Binding Source="{x:Static local:Info.Published}" />
        </MultiBinding>
    </Window.Title>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/AlgosButtonStyles.xaml" />
                <ResourceDictionary Source="/Resources/ComboBoxStyle1.xaml" />
                <ResourceDictionary Source="/Resources/ComboBoxStyle2.xaml" />
                <ResourceDictionary Source="/Resources/ImageButtonStyles.xaml" />
                <ResourceDictionary Source="/Resources/ConverterResource.xaml" />
                <ResourceDictionary Source="/Resources/DataGridCellStyles.xaml" />
                <ResourceDictionary Source="/Resources/DataGridRowStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid Margin="8,0,8,8">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <ScrollViewer
            Grid.Row="0"
            HorizontalScrollBarVisibility="Auto"
            VerticalScrollBarVisibility="Disabled">
            <Grid Margin="0,4,0,2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Button
                    Grid.Column="0"
                    Padding="16,3,16,3"
                    VerticalAlignment="Center"
                    Background="{x:Null}"
                    Command="{Binding OpenSelectAlgoWndCmd}"
                    Content="默认哈希算法"
                    Style="{DynamicResource AlgosButtonStyle1}"
                    ToolTip="此选项影响新加入的文件、[新增哈希计算] 按钮、[计算未完成项] 按钮、[全部重新计算] 按钮的结果" />
                <Label
                    Grid.Column="2"
                    Margin="16,0,0,0"
                    Padding="0"
                    VerticalContentAlignment="Center"
                    Content="默认输出方式：" />
                <ComboBox
                    x:Name="outputTypeComboBox"
                    Grid.Column="3"
                    Width="110"
                    VerticalAlignment="Center"
                    DisplayMemberPath="Display"
                    ItemsSource="{Binding Source={x:Static local:Settings.Current}, Path=AvailableOutputTypes}"
                    SelectedValue="{Binding Source={x:Static local:Settings.Current}, Path=SelectedOutputType}"
                    SelectedValuePath="ItemValue"
                    Style="{StaticResource ComboBoxStyle1}"
                    ToolTip="此选项影响新加入的文件、[刷新输出方式] 按钮、[导出哈希值] 按钮的结果&#10;Base64 格式：以 Base64 编码字符显示计算结果，某些软件配置需要此格式&#10;十六进制大写：常用的显示方式，以十六进制大写字母方式显示计算结果&#10;十六进制小写：常用的显示方式，以十六进制小写字母方式显示计算结果" />
                <Button
                    Grid.Column="4"
                    Margin="4,0,0,0"
                    Command="{Binding RefreshAllOutputTypeCmd}"
                    Style="{StaticResource ImageButtonStyle2}"
                    ToolTip="刷新输出方式：以 [默认输出方式] 下拉列表选择的输出方式更新表格内所有文件的哈希值显示方式">
                    <Image Source="/Images/refresh_output_24.png" />
                </Button>
                <Button
                    Grid.Column="6"
                    Margin="28,0,0,0"
                    Command="{Binding OpenCommandPanelCmd}"
                    Style="{StaticResource ImageButtonStyle2}"
                    ToolTip="筛选与操作：打开筛选与操作窗口以进行筛选、对筛选结果进行操作，或关闭该窗口">
                    <Image Source="/Images/filter_32.png" />
                </Button>
                <Button
                    Grid.Column="7"
                    Margin="28,0,0,0"
                    Command="{Binding SelectFilesToHashCmd}"
                    Style="{StaticResource ImageButtonStyle2}"
                    ToolTip="选择文件：添加所选的文件并开始计算，也可以将文件、文件夹直接拖放到下方表格中">
                    <Image Source="/Images/select_file_32.png" />
                </Button>
                <Button
                    Grid.Column="8"
                    Margin="4,0,0,0"
                    Command="{Binding SelectFolderToHashCmd}"
                    Style="{StaticResource ImageButtonStyle2}"
                    ToolTip="选择文件夹：搜索文件夹内的文件并开始计算，也可以将文件和文件夹直接拖放到表格中">
                    <Image Source="/Images/select_folder_32.png" />
                </Button>
                <Button
                    Grid.Column="9"
                    Margin="4,0,0,0"
                    Command="{Binding StopEnumeratingPackageCmd}"
                    Style="{StaticResource ImageButtonStyle2}"
                    ToolTip="停止搜索文件：如果表格正持续增加新文件，则立即停止向表格添加新文件，但不停止哈希值计算。">
                    <Image Source="/Images/stop_searching_32.png" />
                </Button>
                <Button
                    Grid.Column="10"
                    Margin="28,0,0,0"
                    Command="{Binding ExportHashResultCmd}"
                    IsEnabled="{Binding State, Converter={StaticResource MainModelStateToBooleanCvt}}"
                    Style="{StaticResource ImageButtonStyle2}"
                    ToolTip="导出哈希值：将表格中所有文件的哈希计算结果导出为文件&#10;导出的内容使用的输出方式受到 [默认输出方式] 的控制而不受各文件自己的 [输出方式] 的控制&#10;没有计算结果的行不会被导出，[导出] 列没有勾选的行也不会被导出">
                    <Image Source="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Parent.IsEnabled, Converter={StaticResource BtnExportEnabledImgSrcCvt}}" />
                </Button>
                <Button
                    Grid.Column="11"
                    Margin="4,0,0,0"
                    Command="{Binding RestartModelsWithCopyCmd}"
                    IsEnabled="{Binding State, Converter={StaticResource MainModelStateToBooleanCvt}}"
                    Style="{StaticResource ImageButtonStyle2}"
                    ToolTip="新增哈希计算：根据 [默认哈希算法] 所选算法，计算表格中所有文件的哈希值，但不清除原来的计算结果，而是增加新的行来显示结果">
                    <Image Source="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Parent.IsEnabled, Converter={StaticResource BtnNewLineEnabledImgSrcCvt}}" />
                </Button>
                <Button
                    Grid.Column="12"
                    Margin="4,0,0,0"
                    Command="{Binding RefreshOriginalModelsCmd}"
                    IsEnabled="{Binding State, Converter={StaticResource MainModelStateToBooleanCvt}}"
                    Style="{StaticResource ImageButtonStyle2}"
                    ToolTip="计算未完成项：根据 [默认哈希算法] 所选算法，重新计算表格中未完成计算的文件的哈希值">
                    <Image Source="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Parent.IsEnabled, Converter={StaticResource BtnRefreshEnabledImgSrcCvt}}" />
                </Button>
                <Button
                    Grid.Column="13"
                    Margin="4,0,0,0"
                    Command="{Binding ForceRefreshOriginalModelsCmd}"
                    IsEnabled="{Binding State, Converter={StaticResource MainModelStateToBooleanCvt}}"
                    Style="{StaticResource ImageButtonStyle2}"
                    ToolTip="全部重新计算：根据 [默认哈希算法] 所选算法，重新计算表格中所有文件的哈希值">
                    <Image Source="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Parent.IsEnabled, Converter={StaticResource BtnForceRefreshEnabledImgSrcCvt}}" />
                </Button>
                <Button
                    Grid.Column="14"
                    Margin="4,0,0,0"
                    Command="{Binding ClearAllTableLinesCmd}"
                    Style="{StaticResource ImageButtonStyle2}"
                    ToolTip="清空所有内容：清空表格中显示的所有行">
                    <Image Source="/Images/clear_panel_32.png" />
                </Button>
                <Button
                    Grid.Column="15"
                    Margin="28,0,0,0"
                    Command="{Binding ContinueDisplayedModelsCmd}"
                    Style="{StaticResource ImageButtonStyle2}"
                    ToolTip="继续所有任务：继续所有已暂停的哈希值计算任务">
                    <Image Source="/Images/continue_32.png" />
                </Button>
                <Button
                    Grid.Column="16"
                    Margin="4,0,0,0"
                    Command="{Binding PauseDisplayedModelsCmd}"
                    Style="{StaticResource ImageButtonStyle2}"
                    ToolTip="暂停所有任务：暂停所有正在运行的哈希值计算任务（计算大量小文件时可能会暂停不成功，需要多次点击）">
                    <Image Source="/Images/pause_32.png" />
                </Button>
                <Button
                    Grid.Column="17"
                    Margin="4,0,0,0"
                    Command="{Binding CancelDisplayedModelsCmd}"
                    Style="{StaticResource ImageButtonStyle2}"
                    ToolTip="取消所有任务：取消所有排队中、运行中和已暂停的哈希值计算任务">
                    <Image Source="/Images/cancel_32.png" />
                </Button>
                <Button
                    Grid.Column="18"
                    Margin="28,0,0,0"
                    Command="{Binding MainWindowTopmostCmd}"
                    Style="{StaticResource ImageButtonStyle2}"
                    ToolTip="切换置顶状态：点击在 [置顶/非置顶] 之间切换主窗口置顶状态">
                    <Image Source="{Binding Source={x:Static local:Settings.Current}, Path=MainWndTopmost, Converter={StaticResource BtnTopmostEnabledImgSrcCvt}}" />
                </Button>
                <Button
                    Grid.Column="19"
                    Margin="4,0,0,0"
                    Command="{Binding OpenSettingsPanelCmd}"
                    Style="{StaticResource ImageButtonStyle2}"
                    ToolTip="打开设置面板...">
                    <Image Source="/Images/settings_32.png" />
                </Button>
                <Button
                    Grid.Column="20"
                    Margin="4,0,0,0"
                    Command="{Binding OpenAboutWindowCmd}"
                    Style="{StaticResource ImageButtonStyle2}"
                    ToolTip="关于...">
                    <Image Source="/Images/using_help_32.png" />
                </Button>
            </Grid>
        </ScrollViewer>
        <DataGrid
            Grid.Row="1"
            Margin="0,4,0,0"
            AllowDrop="True"
            AutoGenerateColumns="False"
            Background="Transparent"
            CellStyle="{StaticResource CellStyleNormal}"
            Drop="DataGridHashingFilesDrop"
            HeadersVisibility="Column"
            HorizontalGridLinesBrush="#FF969696"
            IsReadOnly="True"
            ItemsSource="{Binding Source={x:Static local:MainWndViewModel.HashViewModelsViewSrc}, IsAsync=True}"
            PreviewKeyDown="DataGridHashingFilesPrevKeyDown"
            RowStyle="{StaticResource RowStyleNormal}"
            ScrollViewer.CanContentScroll="True"
            SelectionMode="Extended"
            VerticalGridLinesBrush="#FF969696"
            VirtualizingPanel.IsContainerVirtualizable="True"
            VirtualizingPanel.IsVirtualizing="True"
            VirtualizingPanel.VirtualizationMode="Recycling">
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem
                        Command="{Binding OpenModelsFilePathCmd}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems}"
                        Header="打开文件" />
                    <MenuItem
                        Command="{Binding OpenFolderSelectItemsCmd}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems}"
                        Header="打开位置" />
                    <Separator />
                    <MenuItem Header="任务控制" ItemsSource="{Binding HashModelTasksCtrlCmds}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="MenuItem">
                                <Setter Property="Header" Value="{Binding Display}" />
                                <Setter Property="Command" Value="{Binding ItemValue}" />
                                <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                    <MenuItem Header="当前显示的算法切换为" ItemsSource="{Binding SwitchDisplayedAlgoCmds}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="MenuItem">
                                <Setter Property="Header" Value="{Binding Display}" />
                                <Setter Property="Command" Value="{Binding ItemValue}" />
                                <Setter Property="CommandParameter">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource CloneParameterArrayCvt}">
                                            <Binding Path="Param" />
                                            <Binding Path="PlacementTarget.SelectedItems" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}" />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                    <Separator />
                    <MenuItem
                        Command="{Binding CopyFilesNameCmd}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems}"
                        Header="复制文件名" />
                    <MenuItem
                        Command="{Binding CopyFilesFullPathCmd}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems}"
                        Header="复制全路径" />
                    <MenuItem
                        Header="复制所选行当前哈希值"
                        IsEnabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems, Converter={StaticResource CopyModelsHashMenuEnabledCvt}}"
                        ItemsSource="{Binding CopyModelsHashMenuCmds}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="MenuItem">
                                <Setter Property="Header" Value="{Binding Display}" />
                                <Setter Property="Command" Value="{Binding ItemValue}" />
                                <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                    <MenuItem
                        Header="复制所选行所有哈希值"
                        IsEnabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems, Converter={StaticResource CopyModelsHashMenuEnabledCvt}}"
                        ItemsSource="{Binding CopyModelsAllAlgosMenuCmds}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="MenuItem">
                                <Setter Property="Header" Value="{Binding Display}" />
                                <Setter Property="Command" Value="{Binding ItemValue}" />
                                <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                    <Separator />
                    <MenuItem
                        Command="{Binding DeleteSelectedModelsFileCmd}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems}"
                        Header="删除文件" />
                    <MenuItem
                        Command="{Binding RemoveSelectedModelsCmd}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems}"
                        Header="移除所选行" />
                    <Separator />
                    <MenuItem
                        Command="{Binding OpenFilesPropertyCmd}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems}"
                        Header="文件属性" />
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding SerialNumber}" Header="序号" />
                <DataGridTemplateColumn
                    MinWidth="180"
                    Header="文件名"
                    SortMemberPath="FileName">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock
                                Margin="1,0"
                                Padding="4"
                                Background="{Binding FdGroupId, Converter={StaticResource CmpColorToSolidColorBrushCvt}}"
                                Foreground="{Binding InvalidFileName, Converter={StaticResource InvalidFileNameForegroundCvt}}"
                                Text="{Binding FileName}"
                                ToolTip="{Binding FileInfo}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    Header="文件大小"
                    SortMemberPath="FileSize"
                    Visibility="{Binding Source={x:Static local:Settings.Current}, Path=NoFileSizeColumn, Converter={StaticResource NoColumnCvt}, Mode=OneWay}">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock
                                Padding="8,0"
                                HorizontalAlignment="Right"
                                Text="{Binding FileSize, Converter={StaticResource BytesToIntuitiveFileSizeCvt}}">
                                <TextBlock.ToolTip>
                                    <ToolTip Content="{Binding FileSize, Mode=OneWay}" ContentStringFormat="{}{0} 字节" />
                                </TextBlock.ToolTip>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    CanUserSort="True"
                    Header="算法"
                    SortMemberPath="CurrentInOutModel.AlgoType">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox
                                Margin="2"
                                VerticalAlignment="Center"
                                DisplayMemberPath="AlgoName"
                                ItemsSource="{Binding AlgoInOutModels}"
                                SelectedItem="{Binding CurrentInOutModel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Style="{StaticResource ComboBoxStyle2}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="操作对象" Visibility="{Binding Source={x:Static local:Settings.Current}, Path=ShowExecutionTargetColumn, Converter={StaticResource ShowColumnCvt}, Mode=OneWay}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <TextBlock
                                    Grid.Column="1"
                                    Margin="1,0"
                                    Padding="0,4">
                                    <TextBlock.Background>
                                        <MultiBinding Converter="{StaticResource MultiCmpColorToSolidColorBrushCvt}">
                                            <Binding Path="GroupId" />
                                            <Binding Path="FdGroupId" />
                                        </MultiBinding>
                                    </TextBlock.Background>
                                </TextBlock>
                                <CheckBox
                                    Grid.ColumnSpan="2"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="#FFFFFFFF"
                                    IsChecked="{Binding IsExecutionTarget, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    MinWidth="210"
                    Header="哈希值"
                    SortMemberPath="CurrentHashString">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid Margin="1,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <!--  不在计算状态  -->
                                <TextBlock
                                    x:Name="hashStringTextBlock"
                                    Grid.Column="0"
                                    Margin="0,0,4,0"
                                    Padding="4"
                                    VerticalAlignment="Center"
                                    Background="{Binding GroupId, Converter={StaticResource CmpColorToSolidColorBrushCvt}}"
                                    Text="{Binding CurrentHashString}"
                                    TextTrimming="CharacterEllipsis"
                                    ToolTip="{Binding ModelDetails}">
                                    <TextBlock.Visibility>
                                        <MultiBinding Converter="{StaticResource StateFinishedResultSucceededToVisibilityCvt}">
                                            <Binding Path="State" />
                                            <Binding Path="Result" />
                                        </MultiBinding>
                                    </TextBlock.Visibility>
                                    <TextBlock.InputBindings>
                                        <MouseBinding Command="{Binding ShowHashDetailsWindowCmd}" MouseAction="LeftDoubleClick" />
                                    </TextBlock.InputBindings>
                                </TextBlock>
                                <TextBlock
                                    Grid.Column="0"
                                    VerticalAlignment="Center"
                                    Text="{Binding TaskMessage}"
                                    TextTrimming="CharacterEllipsis">
                                    <TextBlock.Visibility>
                                        <MultiBinding Converter="{StaticResource StateNotRunningResultSucceededToVisibilityCvt}">
                                            <Binding Path="State" />
                                            <Binding Path="Result" />
                                        </MultiBinding>
                                    </TextBlock.Visibility>
                                </TextBlock>
                                <!--  正在计算状态  -->
                                <!--  ProgressBar的Value绑定需是OneWay，因为默认TwoWay和private set的Progress无法成功绑定  -->
                                <ProgressBar
                                    Grid.Column="0"
                                    Width="{Binding ElementName=hashStringTextBlock, Path=ActualWidth}"
                                    Height="6"
                                    HorizontalAlignment="Left"
                                    Foreground="#8000B4E7"
                                    Maximum="{Binding MaxProgress}"
                                    Visibility="{Binding State, Converter={StaticResource StateRunningToVisiblityCvt}}"
                                    Value="{Binding Progress, Mode=OneWay}" />
                                <Button
                                    Grid.Column="1"
                                    Padding="4"
                                    Command="{Binding ShutdownModelSelfCmd}"
                                    Style="{StaticResource ImageButtonStyle1}"
                                    ToolTip="停止..."
                                    Visibility="{Binding State, Converter={StaticResource StateRunningToVisiblityCvt}}">
                                    <Image Source="/Images/stop.png" />
                                </Button>
                                <Button
                                    Grid.Column="2"
                                    Padding="4"
                                    Command="{Binding PauseOrContinueModelSelfCmd}"
                                    Style="{StaticResource ImageButtonStyle1}"
                                    ToolTip="{Binding State, Converter={StaticResource SubBtnPauseToolTipCvt}}"
                                    Visibility="{Binding State, Converter={StaticResource StateRunningToVisiblityCvt}}">
                                    <Image Source="{Binding State, Converter={StaticResource SubBtnPauseImageSrcCvt}}" />
                                </Button>
                                <!--  正排队  -->
                                <Button
                                    Grid.Column="2"
                                    Padding="4"
                                    Command="{Binding ShutdownModelSelfCmd}"
                                    Style="{StaticResource ImageButtonStyle1}"
                                    ToolTip="取消..."
                                    Visibility="{Binding State, Converter={StaticResource StateWaitingToVisiblityCvt}}">
                                    <Image Source="/Images/cancel.png" />
                                </Button>
                                <!--  已成功  -->
                                <Button
                                    Grid.Column="1"
                                    Margin="2"
                                    d:DataContext="{d:DesignInstance local:HashViewModel}"
                                    Command="{Binding ShowHashDetailsWindowCmd}"
                                    Content="{Binding AlgoInOutModels.Length}"
                                    Style="{StaticResource GrayRoundTipButton1}"
                                    ToolTip="详情...">
                                    <Button.Visibility>
                                        <MultiBinding Converter="{StaticResource StateFinishedResultSucceededToVisibilityCvt}">
                                            <Binding Path="State" />
                                            <Binding Path="Result" />
                                        </MultiBinding>
                                    </Button.Visibility>
                                </Button>
                                <Button
                                    Grid.Column="2"
                                    Padding="4"
                                    Command="{Binding CopyOneModelHashValueCmd}"
                                    Style="{StaticResource ImageButtonStyle1}"
                                    ToolTip="复制...">
                                    <Button.Visibility>
                                        <MultiBinding Converter="{StaticResource StateFinishedResultSucceededToVisibilityCvt}">
                                            <Binding Path="State" />
                                            <Binding Path="Result" />
                                        </MultiBinding>
                                    </Button.Visibility>
                                    <Image Source="/Images/copy.png" />
                                </Button>
                                <!--  未成功  -->
                                <Button
                                    Grid.Column="2"
                                    Padding="4"
                                    Command="{Binding RestartModelSelfCmd}"
                                    Style="{StaticResource ImageButtonStyle1}"
                                    ToolTip="开始...">
                                    <Button.Visibility>
                                        <MultiBinding Converter="{StaticResource StateFinishedResultNotSucceedToVisibilityCvt}">
                                            <Binding Path="State" />
                                            <Binding Path="Result" />
                                        </MultiBinding>
                                    </Button.Visibility>
                                    <Image Source="/Images/start.png" />
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    CanUserSort="True"
                    Header="输出方式"
                    SortMemberPath="SelectedOutputType">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox
                                Margin="2"
                                VerticalAlignment="Center"
                                DisplayMemberPath="Display"
                                ItemsSource="{Binding AvailableOutputTypes}"
                                SelectedValue="{Binding SelectedOutputType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                SelectedValuePath="ItemValue"
                                Style="{StaticResource ComboBoxStyle2}"
                                ToolTip="指定计算哈希结果的显示方式：&#10;Base64：以 Base64 编码字符显示计算结果，某些软件配置需要此格式&#10;Hex大写：常用的显示方式，以十六进制大写字母方式显示计算结果&#10;Hex小写：常用的显示方式，以十六进制小写字母方式显示计算结果" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn
                    MinWidth="80"
                    Binding="{Binding DurationofTask, StringFormat=f2}"
                    Header="任务耗时 (秒)"
                    Visibility="{Binding Source={x:Static local:Settings.Current}, Path=NoDurationColumn, Converter={StaticResource NoColumnCvt}, Mode=OneWay}" />
                <DataGridTemplateColumn
                    CanUserSort="True"
                    Header="导出"
                    SortMemberPath="CurrentInOutModel.Export"
                    Visibility="{Binding Source={x:Static local:Settings.Current}, Path=NoExportColumn, Converter={StaticResource NoColumnCvt}, Mode=OneWay}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox HorizontalAlignment="Center" IsChecked="{Binding CurrentInOutModel.Export, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    MinWidth="60"
                    CanUserSort="True"
                    Header="校验结果"
                    SortMemberPath="CurrentInOutModel.HashCmpResult">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Label
                                Margin="2"
                                Padding="4,2"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                Background="{Binding CurrentInOutModel.HashCmpResult, Converter={StaticResource CmpResBackgroundCvt}}"
                                BorderBrush="{Binding CurrentInOutModel.HashCmpResult, Converter={StaticResource CmpResBorderBrushCvt}}"
                                BorderThickness="1"
                                Content="{Binding CurrentInOutModel.HashCmpResult, Converter={StaticResource CmpResTextCvt}}"
                                ToolTip="{Binding DataContext.Report, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}, AncestorLevel=1}}"
                                ToolTipService.BetweenShowDelay="0"
                                ToolTipService.InitialShowDelay="0"
                                ToolTipService.ShowDuration="60000">
                                <Label.Foreground>
                                    <MultiBinding Converter="{StaticResource CmpResForegroundCvt}">
                                        <Binding Path="ShowResultText" Source="{x:Static local:Settings.Current}" />
                                        <Binding Path="CurrentInOutModel.HashCmpResult" />
                                    </MultiBinding>
                                </Label.Foreground>
                            </Label>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Width="*" CanUserSort="False" />
            </DataGrid.Columns>
        </DataGrid>
        <Grid Grid.Row="2" Margin="0,8,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" Orientation="Horizontal">
                <Image
                    Width="21"
                    Height="21"
                    Margin="0,0,12,0"
                    gif:AnimationBehavior.RepeatBehavior="Forever"
                    gif:AnimationBehavior.SourceUri="/Images/loading.gif"
                    Visibility="{Binding State, Converter={StaticResource LoadingImageVisiblityCvt}}" />
                <Image
                    Source="/Images/list_count_16.png"
                    Stretch="None"
                    ToolTip="表格中的总行数" />
                <TextBlock
                    Padding="4,0"
                    VerticalAlignment="Center"
                    Foreground="Gray"
                    Text="{Binding Source={x:Static local:MainWndViewModel.HashViewModels}, Path=Count}"
                    ToolTip="表格中的总行数" />
                <Image
                    Margin="6,0,0,0"
                    Source="/Images/remaining_16.png"
                    Stretch="None"
                    ToolTip="哈希值计算任务数" />
                <TextBlock
                    Padding="4,0"
                    VerticalAlignment="Center"
                    Foreground="Gray"
                    Text="{Binding TobeComputedModelsCount}"
                    ToolTip="哈希值计算任务数" />
            </StackPanel>
            <Grid Grid.Column="1" Margin="8,0,0,0">
                <TextBlock
                    Padding="4,0"
                    VerticalAlignment="Center"
                    Panel.ZIndex="0"
                    Foreground="#A0808080"
                    Text="哈希值校验依据：粘贴单/多个哈希值(每行一个)、选择/粘贴哈希值校验依据文件路径、粘贴依据文件的单/多行内容"
                    Visibility="{Binding HashStringOrChecklistPath, Converter={StaticResource PlaceHolderTextVisibilityCvt}}" />
                <TextBox
                    Padding="0,3"
                    Panel.ZIndex="1"
                    AcceptsReturn="True"
                    Background="Transparent"
                    MaxLines="3"
                    PreviewDragOver="TextBoxHashValueOrFilePathPreviewDragOver"
                    PreviewDrop="TextBoxHashOrFilePathPreviewDrop"
                    Text="{Binding HashStringOrChecklistPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    VerticalScrollBarVisibility="Auto" />
            </Grid>
            <Button
                Grid.Column="2"
                Margin="8,0,0,0"
                Padding="8,4"
                VerticalAlignment="Center"
                Click="ButtonSelectChecklistSetPathClick"
                Content="..." />
            <Button
                Grid.Column="3"
                Margin="8,0,0,0"
                Padding="16,4"
                VerticalAlignment="Center"
                Command="{Binding StartVerifyHashValueCmd}"
                Content="校验"
                IsEnabled="{Binding State, Converter={StaticResource MainModelStateToBooleanCvt}}"
                ToolTip="当面板为空时，如果校验依据选择的是通用格式的哈希值文本文件，则：&#10;点击 [校验] 后程序会自动解析文件并在相同目录下寻找要计算哈希值的文件完成计算并显示校验结果。&#10;通用格式的哈希值文件请参考程序 [导出结果] 功能导出的文件的内容排布格式。" />
        </Grid>
    </Grid>
</Window>
