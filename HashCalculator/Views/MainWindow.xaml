<Window
    x:Class="HashCalculator.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:gif="https://github.com/XamlAnimatedGif/XamlAnimatedGif"
    xmlns:local="clr-namespace:HashCalculator"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Width="{Binding Source={x:Static local:Settings.Current}, Path=MainWndWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
    Height="{Binding Source={x:Static local:Settings.Current}, Path=MainWndHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
    d:DataContext="{d:DesignInstance Type=local:MainWndViewModel}"
    d:Height="300"
    d:Width="1100"
    Icon="/Images/icon.ico"
    SnapsToDevicePixels="True"
    Topmost="{Binding Source={x:Static local:Settings.Current}, Path=MainWndTopmost}"
    UseLayoutRounding="True"
    WindowState="{Binding Source={x:Static local:Settings.Current}, Path=MainWindowState, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
    mc:Ignorable="d">
    <Window.Title>
        <MultiBinding StringFormat="{}{0} by {1} @ {2}">
            <Binding Source="{x:Static local:Info.Title}" />
            <Binding Source="{x:Static local:Info.Author}" />
            <Binding Source="{x:Static local:Info.Published}" />
        </MultiBinding>
    </Window.Title>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/ApplicationIcons.xaml" />
                <ResourceDictionary Source="/Resources/AlgosButtonStyles.xaml" />
                <ResourceDictionary Source="/Resources/ComboBoxStyle1.xaml" />
                <ResourceDictionary Source="/Resources/ComboBoxStyle2.xaml" />
                <ResourceDictionary Source="/Resources/ImageButtonStyles.xaml" />
                <ResourceDictionary Source="/Resources/ImgButtonTextStyles.xaml" />
                <ResourceDictionary Source="/Resources/ConverterResource.xaml" />
                <ResourceDictionary Source="/Resources/DataGridCellStyles.xaml" />
                <ResourceDictionary Source="/Resources/DataGridRowStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Window.Top>
        <MultiBinding Converter="{StaticResource MainWndTopCvt}" Mode="TwoWay">
            <Binding
                Mode="TwoWay"
                Path="MainWindowTop"
                Source="{x:Static local:Settings.Current}"
                UpdateSourceTrigger="PropertyChanged" />
            <Binding
                Mode="OneWayToSource"
                Path="FilterAndCmderWndTop"
                Source="{x:Static local:Settings.Current}"
                UpdateSourceTrigger="PropertyChanged" />
        </MultiBinding>
    </Window.Top>
    <Window.Left>
        <MultiBinding Converter="{StaticResource MainWndLeftCvt}" Mode="TwoWay">
            <Binding
                Mode="TwoWay"
                Path="MainWindowLeft"
                Source="{x:Static local:Settings.Current}"
                UpdateSourceTrigger="PropertyChanged" />
            <Binding
                Mode="OneWayToSource"
                Path="FilterAndCmderWndLeft"
                Source="{x:Static local:Settings.Current}"
                UpdateSourceTrigger="PropertyChanged" />
        </MultiBinding>
    </Window.Left>
    <Grid Margin="8,0,8,8">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <ScrollViewer
            Grid.Row="0"
            HorizontalScrollBarVisibility="Auto"
            VerticalScrollBarVisibility="Disabled">
            <Grid Margin="0,4,0,2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0">
                    <Button
                        Command="{Binding OpenSelectAlgoWndCmd}"
                        Style="{StaticResource ImageButtonStyle2}"
                        ToolTip="此设置影响变更后才开始计算的行，包括通过【新增计算】/【计算未完成项】/【重新计算】按钮发起的任务">
                        <Image
                            Width="32"
                            Height="32"
                            Source="{StaticResource algorithmDrawingImage}" />
                    </Button>
                    <TextBlock
                        Margin="0,2"
                        HorizontalAlignment="Center"
                        Style="{StaticResource ImgButtonTextStyle1}"
                        Text="默认算法"
                        Visibility="{Binding Source={x:Static local:Settings.Current}, Path=DisplayMainWndButtonText, Converter={StaticResource FalseToVisibilityCollapsedCvt}}" />
                </StackPanel>
                <StackPanel Grid.Column="1" Margin="16,0,0,0">
                    <StackPanel Orientation="Horizontal">
                        <ComboBox
                            Width="110"
                            Margin="0,2,0,0"
                            VerticalAlignment="Center"
                            DisplayMemberPath="Display"
                            ItemsSource="{Binding Path=(local:SettingsViewModel.AvailableOutputTypesLong)}"
                            SelectedValue="{Binding Source={x:Static local:Settings.Current}, Path=SelectedOutputType}"
                            SelectedValuePath="ItemValue"
                            Style="{StaticResource ComboBoxStyle1}"
                            ToolTip="此设置影响变更后才开始计算的行和【刷新输出】按钮、【导出结果】按钮的行为，其中十六进制大/小写是常用的输出方式" />
                        <Button
                            Margin="2,0,0,0"
                            Command="{Binding RefreshAllOutputTypeCmd}"
                            Style="{StaticResource ImageButtonStyle2}"
                            ToolTip="将表格内所有行的哈希值输出方式刷新为【默认输出方式】下拉列表所选择的输出方式">
                            <Image
                                Width="32"
                                Height="32"
                                Source="{StaticResource refresh_outputDrawingImage}" />
                        </Button>
                    </StackPanel>
                    <TextBlock
                        Margin="0,2"
                        HorizontalAlignment="Left"
                        Style="{StaticResource ImgButtonTextStyle1}"
                        Text="默认输出方式"
                        Visibility="{Binding Source={x:Static local:Settings.Current}, Path=DisplayMainWndButtonText, Converter={StaticResource FalseToVisibilityCollapsedCvt}}" />
                </StackPanel>
                <StackPanel Grid.Column="3" Margin="16,0,0,0">
                    <Button
                        Command="{Binding OpenCommandPanelCmd}"
                        Style="{StaticResource ImageButtonStyle2}"
                        ToolTip="打开【筛选与操作】窗口以进行筛选/对筛选结果进行操作，或关闭已打开的【筛选与操作】窗口">
                        <Image
                            Width="32"
                            Height="32"
                            Source="{StaticResource filterDrawingImage}" />
                    </Button>
                    <TextBlock
                        Margin="0,2"
                        HorizontalAlignment="Center"
                        Style="{StaticResource ImgButtonTextStyle1}"
                        Text="筛选与操作"
                        Visibility="{Binding Source={x:Static local:Settings.Current}, Path=DisplayMainWndButtonText, Converter={StaticResource FalseToVisibilityCollapsedCvt}}" />
                </StackPanel>
                <StackPanel Grid.Column="4" Margin="8,0,0,0">
                    <Button
                        Command="{Binding SelectFilesToHashCmd}"
                        Style="{StaticResource ImageButtonStyle2}"
                        ToolTip="打开【选择文件】对话框以选择/多选文件进行计算，也可以将文件和文件夹直接拖放到表格中">
                        <Image
                            Width="32"
                            Height="32"
                            Source="{StaticResource select_fileDrawingImage}" />
                    </Button>
                    <TextBlock
                        Margin="0,2"
                        HorizontalAlignment="Center"
                        Style="{StaticResource ImgButtonTextStyle1}"
                        Text="选择文件"
                        Visibility="{Binding Source={x:Static local:Settings.Current}, Path=DisplayMainWndButtonText, Converter={StaticResource FalseToVisibilityCollapsedCvt}}" />
                </StackPanel>
                <StackPanel Grid.Column="5" Margin="8,0,0,0">
                    <Button
                        Command="{Binding SelectFolderToHashCmd}"
                        Style="{StaticResource ImageButtonStyle2}"
                        ToolTip="打开【选择文件夹】对话框以选择/多选文件夹进行计算，也可以将文件和文件夹直接拖放到表格中">
                        <Image
                            Width="32"
                            Height="32"
                            Source="{StaticResource select_folderDrawingImage}" />
                    </Button>
                    <TextBlock
                        Margin="0,2"
                        HorizontalAlignment="Center"
                        Style="{StaticResource ImgButtonTextStyle1}"
                        Text="选择目录"
                        Visibility="{Binding Source={x:Static local:Settings.Current}, Path=DisplayMainWndButtonText, Converter={StaticResource FalseToVisibilityCollapsedCvt}}" />
                </StackPanel>
                <StackPanel Grid.Column="6" Margin="8,0,0,0">
                    <Button
                        Command="{Binding StopEnumeratingPackageCmd}"
                        Style="{StaticResource ImageButtonStyle2}"
                        ToolTip="如果程序正持续搜索文件并向表格添加新文件，则立即停止搜索文件，但不停止现有的哈希值计算任务">
                        <Image
                            Width="32"
                            Height="32"
                            Source="{StaticResource stop_searchingDrawingImage}" />
                    </Button>
                    <TextBlock
                        Margin="0,2"
                        HorizontalAlignment="Center"
                        Style="{StaticResource ImgButtonTextStyle1}"
                        Text="停止搜索"
                        Visibility="{Binding Source={x:Static local:Settings.Current}, Path=DisplayMainWndButtonText, Converter={StaticResource FalseToVisibilityCollapsedCvt}}" />
                </StackPanel>
                <StackPanel Grid.Column="7" Margin="8,0,0,0">
                    <Button
                        Command="{Binding ExportHashResultCmd}"
                        IsEnabled="{Binding State, Converter={StaticResource MainModelStateToBooleanCvt}}"
                        Style="{StaticResource ImageButtonStyle2}"
                        ToolTip="将表格中所有行的哈希值计算结果导出为文本文件&#10;导出的内容使用的输出方式受到【默认输出方式】的控制而不受各行自己的【输出方式】的控制&#10;只有计算成功且【导出】列被勾选的行的结果会被导出">
                        <Image
                            Width="32"
                            Height="32"
                            Source="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Parent.IsEnabled, Converter={StaticResource BtnExportEnabledImgSrcCvt}}" />
                    </Button>
                    <TextBlock
                        Margin="0,2"
                        HorizontalAlignment="Center"
                        Style="{StaticResource ImgButtonTextStyle1}"
                        Text="导出结果"
                        Visibility="{Binding Source={x:Static local:Settings.Current}, Path=DisplayMainWndButtonText, Converter={StaticResource FalseToVisibilityCollapsedCvt}}" />
                </StackPanel>
                <StackPanel Grid.Column="8" Margin="8,0,0,0">
                    <Button
                        Command="{Binding CopyAndRestartModelsCmd}"
                        IsEnabled="{Binding State, Converter={StaticResource MainModelStateToBooleanCvt}}"
                        Style="{StaticResource ImageButtonStyle2}"
                        ToolTip="复制表格中所有的行到新行并使用【默认算法】中所选的算法重新计算新行的哈希值">
                        <Image
                            Width="32"
                            Height="32"
                            Source="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Parent.IsEnabled, Converter={StaticResource BtnNewLineEnabledImgSrcCvt}}" />
                    </Button>
                    <TextBlock
                        Margin="0,2"
                        HorizontalAlignment="Center"
                        Style="{StaticResource ImgButtonTextStyle1}"
                        Text="新行重算"
                        Visibility="{Binding Source={x:Static local:Settings.Current}, Path=DisplayMainWndButtonText, Converter={StaticResource FalseToVisibilityCollapsedCvt}}" />
                </StackPanel>
                <StackPanel Grid.Column="9" Margin="8,0,0,0">
                    <Button
                        Command="{Binding RefreshOriginalModelsCmd}"
                        IsEnabled="{Binding State, Converter={StaticResource MainModelStateToBooleanCvt}}"
                        Style="{StaticResource ImageButtonStyle2}"
                        ToolTip="使用【默认算法】中所选的算法重新计算表格中那些没有计算成功的行的哈希值">
                        <Image
                            Width="32"
                            Height="32"
                            Source="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Parent.IsEnabled, Converter={StaticResource BtnRefreshEnabledImgSrcCvt}}" />
                    </Button>
                    <TextBlock
                        Margin="0,2"
                        HorizontalAlignment="Center"
                        Style="{StaticResource ImgButtonTextStyle1}"
                        Text="计算缺值项"
                        Visibility="{Binding Source={x:Static local:Settings.Current}, Path=DisplayMainWndButtonText, Converter={StaticResource FalseToVisibilityCollapsedCvt}}" />
                </StackPanel>
                <StackPanel Grid.Column="10" Margin="8,0,0,0">
                    <Button
                        Command="{Binding ForceRefreshOriginalModelsCmd}"
                        IsEnabled="{Binding State, Converter={StaticResource MainModelStateToBooleanCvt}}"
                        Style="{StaticResource ImageButtonStyle2}"
                        ToolTip="使用【默认算法】中所选的算法重新计算表格中的所有行的哈希值">
                        <Image
                            Width="32"
                            Height="32"
                            Source="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Parent.IsEnabled, Converter={StaticResource BtnForceRefreshEnabledImgSrcCvt}}" />
                    </Button>
                    <TextBlock
                        Margin="0,2"
                        HorizontalAlignment="Center"
                        Style="{StaticResource ImgButtonTextStyle1}"
                        Text="重新计算"
                        Visibility="{Binding Source={x:Static local:Settings.Current}, Path=DisplayMainWndButtonText, Converter={StaticResource FalseToVisibilityCollapsedCvt}}" />
                </StackPanel>
                <StackPanel Grid.Column="11" Margin="8,0,0,0">
                    <Button
                        Command="{Binding ClearAllTableLinesCmd}"
                        Style="{StaticResource ImageButtonStyle2}"
                        ToolTip="停止表格中的所有任务并清空表格 (任务进行时直接清空有可能出现剩下一行未被清除的情况)">
                        <Image
                            Width="32"
                            Height="32"
                            Source="{StaticResource clear_tableDrawingImage}" />
                    </Button>
                    <TextBlock
                        Margin="0,2"
                        HorizontalAlignment="Center"
                        Style="{StaticResource ImgButtonTextStyle1}"
                        Text="清空表格"
                        Visibility="{Binding Source={x:Static local:Settings.Current}, Path=DisplayMainWndButtonText, Converter={StaticResource FalseToVisibilityCollapsedCvt}}" />
                </StackPanel>
                <StackPanel Grid.Column="12" Margin="8,0,0,0">
                    <Button
                        Command="{Binding ContinueDisplayedModelsCmd}"
                        Style="{StaticResource ImageButtonStyle2}"
                        ToolTip="继续所有已被暂停的哈希值计算任务，注意：此按钮不会启动已停止的任务">
                        <Image
                            Width="32"
                            Height="32"
                            Source="{StaticResource continue_tasksDrawingImage}" />
                    </Button>
                    <TextBlock
                        Margin="0,2"
                        HorizontalAlignment="Center"
                        Style="{StaticResource ImgButtonTextStyle1}"
                        Text="全部继续"
                        Visibility="{Binding Source={x:Static local:Settings.Current}, Path=DisplayMainWndButtonText, Converter={StaticResource FalseToVisibilityCollapsedCvt}}" />
                </StackPanel>
                <StackPanel Grid.Column="13" Margin="8,0,0,0">
                    <Button
                        Command="{Binding PauseDisplayedModelsCmd}"
                        Style="{StaticResource ImageButtonStyle2}"
                        ToolTip="暂停所有正在运行的哈希值计算任务 (计算大量小文件时可能会部分暂停不成功，需要多次点击)">
                        <Image
                            Width="32"
                            Height="32"
                            Source="{StaticResource pause_tasksDrawingImage}" />
                    </Button>
                    <TextBlock
                        Margin="0,2"
                        HorizontalAlignment="Center"
                        Style="{StaticResource ImgButtonTextStyle1}"
                        Text="全部暂停"
                        Visibility="{Binding Source={x:Static local:Settings.Current}, Path=DisplayMainWndButtonText, Converter={StaticResource FalseToVisibilityCollapsedCvt}}" />
                </StackPanel>
                <StackPanel Grid.Column="14" Margin="8,0,0,0">
                    <Button
                        Command="{Binding CancelDisplayedModelsCmd}"
                        Style="{StaticResource ImageButtonStyle2}"
                        ToolTip="取消或停止所有排队中、运行中和已暂停的哈希值计算任务">
                        <Image
                            Width="32"
                            Height="32"
                            Source="{StaticResource cancel_tasksDrawingImage}" />
                    </Button>
                    <TextBlock
                        Margin="0,2"
                        HorizontalAlignment="Center"
                        Style="{StaticResource ImgButtonTextStyle1}"
                        Text="全部取消"
                        Visibility="{Binding Source={x:Static local:Settings.Current}, Path=DisplayMainWndButtonText, Converter={StaticResource FalseToVisibilityCollapsedCvt}}" />
                </StackPanel>
                <StackPanel Grid.Column="15" Margin="8,0,0,0">
                    <Button
                        Command="{Binding MainWindowTopmostCmd}"
                        Style="{StaticResource ImageButtonStyle2}"
                        ToolTip="重复点击时在【置顶】与【未置顶】之间切换主窗口的状态，按钮为灰色代表主窗口是未置顶状态，否则是置顶状态">
                        <Image
                            Width="32"
                            Height="32"
                            Source="{Binding Source={x:Static local:Settings.Current}, Path=MainWndTopmost, Converter={StaticResource BtnTopmostEnabledImgSrcCvt}}" />
                    </Button>
                    <TextBlock
                        Margin="0,2"
                        HorizontalAlignment="Center"
                        Style="{StaticResource ImgButtonTextStyle1}"
                        Text="置顶窗口"
                        Visibility="{Binding Source={x:Static local:Settings.Current}, Path=DisplayMainWndButtonText, Converter={StaticResource FalseToVisibilityCollapsedCvt}}" />
                </StackPanel>
                <StackPanel Grid.Column="16" Margin="8,0,0,0">
                    <Button
                        Command="{Binding OpenSettingsPanelCmd}"
                        Style="{StaticResource ImageButtonStyle2}"
                        ToolTip="打开软件的【设置】面板">
                        <Image
                            Width="32"
                            Height="32"
                            Source="{StaticResource settingsDrawingImage}" />
                    </Button>
                    <TextBlock
                        Margin="0,2"
                        HorizontalAlignment="Center"
                        Style="{StaticResource ImgButtonTextStyle1}"
                        Text="设置"
                        Visibility="{Binding Source={x:Static local:Settings.Current}, Path=DisplayMainWndButtonText, Converter={StaticResource FalseToVisibilityCollapsedCvt}}" />
                </StackPanel>
                <StackPanel Grid.Column="17" Margin="8,0,0,0">
                    <Button
                        Command="{Binding OpenAboutWindowCmd}"
                        Style="{StaticResource ImageButtonStyle2}"
                        ToolTip="打开软件的【关于】面板">
                        <Image
                            Width="32"
                            Height="32"
                            Source="{StaticResource aboutDrawingImage}" />
                    </Button>
                    <TextBlock
                        Margin="0,2"
                        HorizontalAlignment="Center"
                        Style="{StaticResource ImgButtonTextStyle1}"
                        Text="关于"
                        Visibility="{Binding Source={x:Static local:Settings.Current}, Path=DisplayMainWndButtonText, Converter={StaticResource FalseToVisibilityCollapsedCvt}}" />
                </StackPanel>
            </Grid>
        </ScrollViewer>
        <DataGrid
            x:Name="MainWindowTable"
            Grid.Row="1"
            Margin="0,4,0,0"
            AllowDrop="True"
            AutoGenerateColumns="False"
            Background="Transparent"
            CellStyle="{StaticResource CellStyleNormal1}"
            Drop="DataGridHashingFilesDrop"
            Grid.IsSharedSizeScope="True"
            HeadersVisibility="Column"
            HorizontalGridLinesBrush="#FF969696"
            IsReadOnly="True"
            ItemsSource="{Binding Source={x:Static local:MainWndViewModel.HashViewModelsViewSrc}, IsAsync=True}"
            PreviewKeyDown="DataGridHashingFilesPrevKeyDown"
            RowStyle="{StaticResource MainTableRowStyle}"
            ScrollViewer.CanContentScroll="True"
            SelectionMode="Extended"
            VerticalGridLinesBrush="#FF969696"
            VirtualizingPanel.IsContainerVirtualizable="True"
            VirtualizingPanel.IsVirtualizing="True"
            VirtualizingPanel.IsVirtualizingWhenGrouping="True"
            VirtualizingPanel.VirtualizationMode="Recycling">
            <local:ExecTargetAttach.Monitoring>
                <MultiBinding Converter="{StaticResource StateAndSelectionWayToMonitoring}" Mode="OneWay">
                    <Binding Mode="OneWay" Path="State" />
                    <Binding
                        Mode="OneWay"
                        Path="IsMainRowSelectedByCheckBox"
                        Source="{x:Static local:Settings.Current}" />
                </MultiBinding>
            </local:ExecTargetAttach.Monitoring>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem
                        Command="{Binding OpenModelsFilePathCmd}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems}"
                        Header="打开文件" />
                    <MenuItem
                        Command="{Binding OpenFolderSelectItemsCmd}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems}"
                        Header="打开位置" />
                    <Separator />
                    <MenuItem Header="任务控制" ItemsSource="{Binding CtrlHashViewModelTaskCmds}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="MenuItem">
                                <Setter Property="Header" Value="{Binding Display}" />
                                <Setter Property="Command" Value="{Binding ItemValue}" />
                                <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                    <MenuItem Header="切换所选行当前算法" ItemsSource="{Binding SwitchDisplayedAlgoCmds}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="MenuItem">
                                <Setter Property="Header" Value="{Binding Display}" />
                                <Setter Property="Command" Value="{Binding ItemValue}" />
                                <Setter Property="CommandParameter">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource CloneParameterArrayCvt}">
                                            <Binding Path="Param" />
                                            <Binding Path="PlacementTarget.SelectedItems" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}" />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                    <MenuItem Header="切换所选行导出状态" ItemsSource="{Binding SwitchAlgoExportStateCmds}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="MenuItem">
                                <Setter Property="Header" Value="{Binding Display}" />
                                <Setter Property="Command" Value="{Binding ItemValue}" />
                                <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                    <Separator />
                    <MenuItem
                        Command="{Binding CopyFilesNameCmd}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems}"
                        Header="复制文件名" />
                    <MenuItem
                        Command="{Binding CopyFilesFullPathCmd}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems}"
                        Header="复制文件的完整路径" />
                    <MenuItem
                        Header="按模板复制所选行当前结果"
                        IsEnabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems, Converter={StaticResource CopyModelsHashMenuEnabledCvt}}"
                        ItemsSource="{Binding CopyModelsHashMenuCmds}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="MenuItem">
                                <Setter Property="Header" Value="{Binding Display}" />
                                <Setter Property="Command" Value="{Binding ItemValue}" />
                                <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                    <MenuItem
                        Header="按模板复制所选行所有结果"
                        IsEnabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems, Converter={StaticResource CopyModelsHashMenuEnabledCvt}}"
                        ItemsSource="{Binding CopyModelsAllHashesMenuCmds}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="MenuItem">
                                <Setter Property="Header" Value="{Binding Display}" />
                                <Setter Property="Command" Value="{Binding ItemValue}" />
                                <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                    <MenuItem
                        Command="{Binding CopyModelsCurHashWithNoFormatCmd}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems}"
                        Header="复制所选行当前哈希值"
                        IsEnabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems, Converter={StaticResource CopyModelsHashMenuEnabledCvt}}" />
                    <MenuItem
                        Command="{Binding CopyModelsAllHashWithNoFormatCmd}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems}"
                        Header="复制所选行所有哈希值"
                        IsEnabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems, Converter={StaticResource CopyModelsHashMenuEnabledCvt}}" />
                    <Separator />
                    <MenuItem
                        Command="{Binding DeleteSelectedModelsFileCmd}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems}"
                        Header="删除文件" />
                    <MenuItem
                        Command="{Binding RemoveSelectedModelsCmd}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems}"
                        Header="移除所选行" />
                    <Separator />
                    <MenuItem
                        Command="{Binding OpenFilesPropertyCmd}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}, AncestorLevel=1}, Path=PlacementTarget.SelectedItems}"
                        Header="文件属性" />
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Columns>
                <DataGridTemplateColumn
                    Header="序号"
                    SortMemberPath="SerialNumber"
                    Visibility="{Binding Source={x:Static local:Settings.Current}, Path=NoSerialNumColumn, Converter={StaticResource TrueToVisibilityHiddenCvt}, Mode=OneWay}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Padding="2" Text="{Binding SerialNumber}">
                                <TextBlock.InputBindings>
                                    <MouseBinding
                                        Command="{Binding TableColumnDoubleClickCmd}"
                                        CommandParameter="{Binding Source={x:Static local:Settings.Current}, Path=SerialColumnLeftDoubleClick}"
                                        MouseAction="LeftDoubleClick" />
                                </TextBlock.InputBindings>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    MinWidth="100"
                    Header="文件名"
                    SortMemberPath="FileName">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="fileIcon" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Image
                                    Grid.Column="0"
                                    Margin="1"
                                    VerticalAlignment="Center"
                                    Source="{Binding FileIcon}" />
                                <TextBlock
                                    Grid.Column="1"
                                    Margin="1"
                                    Padding="4"
                                    VerticalAlignment="Center"
                                    Background="{Binding FdGroupId, Converter={StaticResource CmpColorToSolidColorBrushCvt}}"
                                    Foreground="{Binding InvalidFileName, Converter={StaticResource InvalidFileNameForegroundCvt}}"
                                    Text="{Binding FileName}"
                                    TextTrimming="CharacterEllipsis"
                                    ToolTip="{Binding Information}">
                                    <TextBlock.InputBindings>
                                        <MouseBinding
                                            Command="{Binding TableColumnDoubleClickCmd}"
                                            CommandParameter="{Binding Source={x:Static local:Settings.Current}, Path=FileNameColumnLeftDoubleClick}"
                                            MouseAction="LeftDoubleClick" />
                                    </TextBlock.InputBindings>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    MinWidth="100"
                    CanUserSort="False"
                    Header="完整路径"
                    Visibility="{Binding Source={x:Static local:Settings.Current}, Path=NoFullPathColumn, Converter={StaticResource TrueToVisibilityHiddenCvt}, Mode=OneWay}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock
                                Padding="2,0"
                                Text="{Binding Information}"
                                TextTrimming="CharacterEllipsis"
                                ToolTip="{Binding Information}">
                                <TextBlock.InputBindings>
                                    <MouseBinding
                                        Command="{Binding TableColumnDoubleClickCmd}"
                                        CommandParameter="{Binding Source={x:Static local:Settings.Current}, Path=FullPathColumnLeftDoubleClick}"
                                        MouseAction="LeftDoubleClick" />
                                </TextBlock.InputBindings>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    Header="文件大小"
                    SortMemberPath="FileLength"
                    Visibility="{Binding Source={x:Static local:Settings.Current}, Path=NoFileSizeColumn, Converter={StaticResource TrueToVisibilityHiddenCvt}, Mode=OneWay}">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock
                                Padding="8,0"
                                HorizontalAlignment="Right"
                                Text="{Binding FileLength, Converter={StaticResource BytesToIntuitiveFileSizeCvt}}">
                                <TextBlock.ToolTip>
                                    <ToolTip Content="{Binding FileLength, Mode=OneWay}" ContentStringFormat="{}{0} 字节" />
                                </TextBlock.ToolTip>
                                <TextBlock.InputBindings>
                                    <MouseBinding
                                        Command="{Binding TableColumnDoubleClickCmd}"
                                        CommandParameter="{Binding Source={x:Static local:Settings.Current}, Path=FileSizeColumnLeftDoubleClick}"
                                        MouseAction="LeftDoubleClick" />
                                </TextBlock.InputBindings>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    CanUserSort="True"
                    Header="算法"
                    SortMemberPath="CurrentInOutModel.AlgoType">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox
                                Margin="2"
                                VerticalAlignment="Center"
                                DisplayMemberPath="AlgoName"
                                ItemsSource="{Binding AlgoInOutModels}"
                                SelectedItem="{Binding CurrentInOutModel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Style="{StaticResource ComboBoxStyle2}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="操作目标" Visibility="{Binding Source={x:Static local:Settings.Current}, Path=IsMainRowSelectedByCheckBox, Converter={StaticResource TrueToVisibilityVisibleCvt}, Mode=OneWay}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <TextBlock
                                    Grid.Column="1"
                                    Margin="1,0"
                                    Padding="0,4">
                                    <TextBlock.Background>
                                        <MultiBinding Converter="{StaticResource MultiCmpColorToSolidColorBrushCvt}">
                                            <Binding Path="GroupId" />
                                            <Binding Path="FdGroupId" />
                                        </MultiBinding>
                                    </TextBlock.Background>
                                </TextBlock>
                                <CheckBox
                                    Grid.ColumnSpan="2"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="#FFFFFFFF"
                                    IsChecked="{Binding IsExecutionTarget, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    MinWidth="210"
                    Header="哈希值"
                    SortMemberPath="CurrentHashString">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid Margin="1,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <!--  不在计算状态  -->
                                <TextBlock
                                    x:Name="hashStringTextBlock"
                                    Grid.Column="0"
                                    Margin="0,0,4,0"
                                    Padding="4"
                                    VerticalAlignment="Center"
                                    Background="{Binding GroupId, Converter={StaticResource CmpColorToSolidColorBrushCvt}}"
                                    Text="{Binding CurrentHashString}"
                                    TextTrimming="CharacterEllipsis"
                                    ToolTip="{Binding ModelDetails}">
                                    <TextBlock.Visibility>
                                        <MultiBinding Converter="{StaticResource StateFinishedResultSucceededToVisibilityCvt}">
                                            <Binding Path="State" />
                                            <Binding Path="Result" />
                                        </MultiBinding>
                                    </TextBlock.Visibility>
                                    <TextBlock.InputBindings>
                                        <MouseBinding
                                            Command="{Binding TableColumnDoubleClickCmd}"
                                            CommandParameter="{Binding Source={x:Static local:Settings.Current}, Path=HashValueColumnLeftDoubleClick}"
                                            MouseAction="LeftDoubleClick" />
                                    </TextBlock.InputBindings>
                                </TextBlock>
                                <TextBlock
                                    Grid.Column="0"
                                    Padding="4"
                                    VerticalAlignment="Center"
                                    Text="{Binding ErrorDetails}"
                                    TextTrimming="CharacterEllipsis">
                                    <TextBlock.Visibility>
                                        <MultiBinding Converter="{StaticResource StateNotRunningResultSucceededToVisibilityCvt}">
                                            <Binding Path="State" />
                                            <Binding Path="Result" />
                                        </MultiBinding>
                                    </TextBlock.Visibility>
                                </TextBlock>
                                <!--  正在计算状态  -->
                                <!--  ProgressBar的Value绑定需是OneWay，因为默认TwoWay和private set的Progress无法成功绑定  -->
                                <ProgressBar
                                    Grid.Column="0"
                                    Width="{Binding ElementName=hashStringTextBlock, Path=ActualWidth}"
                                    Height="6"
                                    HorizontalAlignment="Left"
                                    Foreground="#8000B4E7"
                                    Maximum="{Binding MaxProgress}"
                                    Visibility="{Binding State, Converter={StaticResource StateRunningToVisiblityCvt}}"
                                    Value="{Binding Progress, Mode=OneWay}" />
                                <Button
                                    Grid.Column="2"
                                    Padding="4"
                                    Command="{Binding ShutdownModelSelfCmd}"
                                    Style="{StaticResource ImageButtonStyle1}"
                                    ToolTip="停止..."
                                    Visibility="{Binding State, Converter={StaticResource StateRunningToVisiblityCvt}}">
                                    <Image
                                        Width="16"
                                        Height="16"
                                        Source="{StaticResource stop_oneDrawingImage}" />
                                </Button>
                                <Button
                                    Grid.Column="3"
                                    Padding="4"
                                    Command="{Binding PauseOrContinueModelSelfCmd}"
                                    Style="{StaticResource ImageButtonStyle1}"
                                    ToolTip="{Binding State, Converter={StaticResource SubBtnPauseToolTipCvt}}"
                                    Visibility="{Binding State, Converter={StaticResource StateRunningToVisiblityCvt}}">
                                    <Image
                                        Width="16"
                                        Height="16"
                                        Source="{Binding State, Converter={StaticResource SubBtnPauseImageSrcCvt}}" />
                                </Button>
                                <!--  正排队  -->
                                <Button
                                    Grid.Column="3"
                                    Padding="4"
                                    Command="{Binding ShutdownModelSelfCmd}"
                                    Style="{StaticResource ImageButtonStyle1}"
                                    ToolTip="取消..."
                                    Visibility="{Binding State, Converter={StaticResource StateWaitingToVisiblityCvt}}">
                                    <Image
                                        Width="16"
                                        Height="16"
                                        Source="{StaticResource cancel_oneDrawingImage}" />
                                </Button>
                                <!--  已成功  -->
                                <Button
                                    Grid.Column="1"
                                    Width="20"
                                    Height="21"
                                    Margin="0,0,4,0"
                                    d:DataContext="{d:DesignInstance local:HashViewModel}"
                                    Command="{Binding ShowHashDetailsWindowCmd}"
                                    Content="{Binding AlgoInOutModels, Converter={StaticResource AlgoInOutModelsToNumberCvt}}"
                                    Style="{StaticResource GrayRoundTipButton1}"
                                    ToolTip="详情...">
                                    <Button.Visibility>
                                        <MultiBinding Converter="{StaticResource StateFinishedResultSucceededToVisibilityCvt}">
                                            <Binding Path="State" />
                                            <Binding Path="Result" />
                                        </MultiBinding>
                                    </Button.Visibility>
                                </Button>
                                <Button
                                    Grid.Column="2"
                                    Padding="4"
                                    Command="{Binding CopyThisModelCurHashCmd}"
                                    Style="{StaticResource ImageButtonStyle1}"
                                    ToolTip="按模板复制该行当前结果...">
                                    <Button.Visibility>
                                        <MultiBinding Converter="{StaticResource StateFinishedResultSucceededToVisibilityCvt}">
                                            <Binding Path="State" />
                                            <Binding Path="Result" />
                                        </MultiBinding>
                                    </Button.Visibility>
                                    <Image
                                        Width="16"
                                        Height="16"
                                        Source="{StaticResource copy_oneDrawingImage}" />
                                </Button>
                                <Button
                                    Grid.Column="3"
                                    Padding="4"
                                    Command="{Binding CopyThisModelAllHashesCmd}"
                                    Style="{StaticResource ImageButtonStyle1}"
                                    ToolTip="按模板复制该行所有结果...">
                                    <Button.Visibility>
                                        <MultiBinding Converter="{StaticResource StateFinishedResultSucceededToVisibilityCvt}">
                                            <Binding Path="State" />
                                            <Binding Path="Result" />
                                        </MultiBinding>
                                    </Button.Visibility>
                                    <Image
                                        Width="16"
                                        Height="16"
                                        Source="{StaticResource copy_multiDrawingImage}" />
                                </Button>
                                <!--  未成功  -->
                                <Button
                                    Grid.Column="3"
                                    Padding="4"
                                    Command="{Binding RestartModelSelfCmd}"
                                    Style="{StaticResource ImageButtonStyle1}"
                                    ToolTip="开始...">
                                    <Button.Visibility>
                                        <MultiBinding Converter="{StaticResource StateFinishedResultNotSucceedToVisibilityCvt}">
                                            <Binding Path="State" />
                                            <Binding Path="Result" />
                                        </MultiBinding>
                                    </Button.Visibility>
                                    <Image
                                        Width="16"
                                        Height="16"
                                        Source="{StaticResource start_oneDrawingImage}" />
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    CanUserSort="True"
                    Header="输出方式"
                    SortMemberPath="SelectedOutputType"
                    Visibility="{Binding Source={x:Static local:Settings.Current}, Path=NoOutputTypeColumn, Converter={StaticResource TrueToVisibilityHiddenCvt}, Mode=OneWay}">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox
                                Margin="2"
                                VerticalAlignment="Center"
                                DisplayMemberPath="Display"
                                ItemsSource="{Binding Path=(local:SettingsViewModel.AvailableOutputTypes)}"
                                SelectedValue="{Binding SelectedOutputType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                SelectedValuePath="ItemValue"
                                Style="{StaticResource ComboBoxStyle2}"
                                ToolTip="指定计算哈希结果的显示方式：&#10;Base64：以 Base64 编码字符显示计算结果，某些软件配置需要此格式&#10;Hex大写：常用的显示方式，以十六进制大写字母方式显示计算结果&#10;Hex小写：常用的显示方式，以十六进制小写字母方式显示计算结果" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    MinWidth="80"
                    Header="任务耗时 (秒)"
                    Visibility="{Binding Source={x:Static local:Settings.Current}, Path=NoDurationColumn, Converter={StaticResource TrueToVisibilityHiddenCvt}, Mode=OneWay}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Padding="2" Text="{Binding DurationofTask, StringFormat=f2}">
                                <TextBlock.InputBindings>
                                    <MouseBinding
                                        Command="{Binding TableColumnDoubleClickCmd}"
                                        CommandParameter="{Binding Source={x:Static local:Settings.Current}, Path=DurationColumnLeftDoubleClick}"
                                        MouseAction="LeftDoubleClick" />
                                </TextBlock.InputBindings>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    CanUserSort="True"
                    Header="导出"
                    SortMemberPath="CurrentInOutModel.Export"
                    Visibility="{Binding Source={x:Static local:Settings.Current}, Path=NoExportColumn, Converter={StaticResource TrueToVisibilityHiddenCvt}, Mode=OneWay}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox
                                HorizontalAlignment="Center"
                                Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}, AncestorLevel=1}, Path=DataContext.ChangeAlgosExportStateCmd}"
                                CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=DataContext}"
                                IsChecked="{Binding CurrentInOutModel.Export, Mode=OneWay}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    MinWidth="60"
                    CanUserSort="True"
                    Header="校验结果"
                    SortMemberPath="CurrentInOutModel.HashCmpResult"
                    Visibility="{Binding Source={x:Static local:Settings.Current}, Path=NoCmpResultColumn, Converter={StaticResource TrueToVisibilityHiddenCvt}, Mode=OneWay}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Label
                                Margin="2"
                                Padding="4,2"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                Background="{Binding CurrentInOutModel.HashCmpResult, Converter={StaticResource CmpResBackgroundCvt}}"
                                BorderBrush="{Binding CurrentInOutModel.HashCmpResult, Converter={StaticResource CmpResBorderBrushCvt}}"
                                BorderThickness="1"
                                Content="{Binding CurrentInOutModel.HashCmpResult, Converter={StaticResource CmpResTextCvt}}"
                                ToolTip="{Binding DataContext.Report, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}, AncestorLevel=1}}"
                                ToolTipService.BetweenShowDelay="0"
                                ToolTipService.InitialShowDelay="0"
                                ToolTipService.ShowDuration="60000">
                                <Label.Foreground>
                                    <MultiBinding Converter="{StaticResource CmpResForegroundCvt}">
                                        <Binding Path="ShowResultText" Source="{x:Static local:Settings.Current}" />
                                        <Binding Path="CurrentInOutModel.HashCmpResult" />
                                    </MultiBinding>
                                </Label.Foreground>
                            </Label>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="哈希标记" Visibility="{Binding Source={x:Static local:Settings.Current}, Path=ShowHashInTagColumn, Converter={StaticResource TrueToVisibilityVisibleCvt}}">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="inTagHashGroup" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Column="0"
                                    Padding="4"
                                    VerticalAlignment="Center"
                                    Background="{Binding EhGroupId, Converter={StaticResource CmpColorToSolidColorBrushCvt}}"
                                    Text="{Binding HcmDataFromFile, Converter={StaticResource DisplayHcmDataHashNameCvt}}" />
                                <TextBlock
                                    Grid.Column="1"
                                    Padding="4"
                                    VerticalAlignment="Center"
                                    Background="{Binding EhGroupId, Converter={StaticResource CmpColorToSolidColorBrushCvt}}"
                                    TextTrimming="CharacterEllipsis">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource DisplayHcmDataHashValueCvt}">
                                            <Binding Path="HcmDataFromFile" />
                                            <Binding Path="SelectedOutputType" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Grid Grid.Row="2" Margin="0,8,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" Orientation="Horizontal">
                <Image
                    Width="21"
                    Height="21"
                    Margin="0,0,12,0"
                    gif:AnimationBehavior.RepeatBehavior="Forever"
                    gif:AnimationBehavior.SourceUri="/Images/loading.gif"
                    Visibility="{Binding State, Converter={StaticResource LoadingImageVisiblityCvt}}" />
                <Image
                    Width="16"
                    Height="16"
                    Source="{StaticResource total_linesDrawingImage}"
                    ToolTip="表格总行数..." />
                <TextBlock
                    Padding="4,0"
                    VerticalAlignment="Center"
                    Foreground="Gray"
                    Text="{Binding Source={x:Static local:MainWndViewModel.HashViewModels}, Path=Count}"
                    ToolTip="表格总行数..." />
                <Image
                    Width="16"
                    Height="16"
                    Margin="6,0,0,0"
                    Source="{StaticResource remainingDrawingImage}"
                    ToolTip="待计算行数..." />
                <TextBlock
                    Padding="4,0"
                    VerticalAlignment="Center"
                    Foreground="Gray"
                    Text="{Binding TobeComputedModelsCount}"
                    ToolTip="待计算行数..." />
            </StackPanel>
            <Grid Grid.Column="1" Margin="8,0,0,0">
                <TextBlock
                    Padding="4,0"
                    VerticalAlignment="Center"
                    Panel.ZIndex="0"
                    Foreground="#A0808080"
                    Text="哈希值校验依据：可在此输入单个或多个哈希值(每行一个)、使用后面的 [...] 按钮选择 [哈希值清单] 文件、粘贴 [哈希值清单] 的单行或多行内容"
                    Visibility="{Binding HashStringOrChecklistPath, Converter={StaticResource PlaceHolderTextVisibilityCvt}}" />
                <TextBox
                    Padding="0,3"
                    Panel.ZIndex="1"
                    AcceptsReturn="True"
                    Background="Transparent"
                    MaxLines="3"
                    PreviewDragOver="TextBoxHashStringOrChecklistPathPreviewDragOver"
                    PreviewDrop="TextBoxHashOrFilePathPreviewDrop"
                    Text="{Binding HashStringOrChecklistPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    VerticalScrollBarVisibility="Auto" />
            </Grid>
            <Button
                Grid.Column="2"
                Margin="8,0,0,0"
                Padding="8,4"
                VerticalAlignment="Center"
                Command="{Binding SelectChecklistFileCmd}"
                Content="..."
                ToolTip="打开【选择文件】对话框选择【哈希值清单】文件，将选择的文件路径填充到【哈希值校验依据】输入框中" />
            <Button
                Grid.Column="3"
                Margin="8,0,0,0"
                Padding="16,4"
                VerticalAlignment="Center"
                Command="{Binding StartCheckHashResultsCmd}"
                Content="校验"
                IsEnabled="{Binding State, Converter={StaticResource MainModelStateToBooleanCvt}}"
                ToolTip="解析输入框的内容并检查哪些行的哈希值与输入框内的哈希值匹配并在【校验结果】列显示结果。&#10;如果检查时表格为空且校验依据是通用格式的【哈希值清单】文件路径，则：&#10;1. 点击【校验】后程序会自动解析文件并在相同目录下寻找要计算哈希值的文件完成计算并显示校验结果。&#10;2. 通用格式的【文件哈希值清单】文件请参考程序【导出结果】功能导出的文件的内容排布格式。" />
        </Grid>
    </Grid>
</Window>
